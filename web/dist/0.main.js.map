{"version":3,"sources":["webpack:///./node_modules/dice-random/index.js","webpack:///./node_modules/diceware-list/index.js","webpack:///./node_modules/diceware-word/index.js"],"names":["window","random","crypto","getRandomValues","bind","module","exports","range","nb","array","Uint32Array","Math","abs","list","words","diceware","entropy","dictionary","number"],"mappings":"4EAKA,GAAsB,oBAAXA,OACT,IAAIC,EAASD,OAAOE,QAAUF,OAAOE,OAAOC,gBAAgBC,KAAKF,QAUnEG,EAAOC,QAAU,CAACC,EAAQ,KACxB,IAAIC,EACJ,GAAIP,EAAQ,CACV,MAAMQ,EAAQ,IAAIC,YAAY,IAC9BT,EAAOQ,GACPD,EAAKC,EAAM,QAEXD,EAAsB,WAAhBG,KAAKV,SAA0B,EAEvC,OAAOU,KAAKC,IAAIJ,EAAKD,GAAS,I,qBCrBhC,MAAMM,EAAO,EAAQ,MAUrBR,EAAOC,QAAU,CAACE,EAAIM,EAAQD,IAASA,EAAKL,I,isxICV5C,MAAMP,EAAS,EAAQ,MACjBc,EAAW,EAAQ,MAWzBV,EAAOC,QAAU,CAACU,EAAU,EAAGC,EAAaF,KAC1C,IAAIG,EAAS,GACb,KAAOF,KAAWE,GAAUjB,IAC5B,OAAOgB,EAAWC","file":"0.main.js","sourcesContent":["/**\n * Check if getRandomValues exist in browser.\n * @type {Function}\n */\n\nif (typeof window !== 'undefined') {\n  var random = window.crypto && window.crypto.getRandomValues.bind(crypto)\n}\n\n/**\n * Generate cryptographically strong random number if possible.\n *\n * @param {Number?} range\n * @api public\n */\n\nmodule.exports = (range = 5) => {\n  var nb\n  if (random) {\n    const array = new Uint32Array(10)\n    random(array)\n    nb = array[0]\n  } else {\n    nb = (Math.random() * 0x100000000) | 0\n  }\n  return Math.abs(nb % range) + 1\n}\n","/**\n * Dependencies\n */\n\nconst list = require('./list.json')\n\n/**\n * Return diceware word.\n *\n * @param {Number} nb\n * @param {Object} words\n * @api public\n */\n\nmodule.exports = (nb, words = list) => list[nb]\n","/**\n * Dependencies\n */\n\nconst random = require('dice-random')\nconst diceware = require('diceware-list')\n\n/**\n * Create a word from a diceware dictionary.\n *\n * @param {Number} entroy (default 5)\n * @param {Object} dictionary (default EFF Long)\n * @return {String}\n * @api public\n */\n\nmodule.exports = (entropy = 5, dictionary = diceware) => {\n  let number = ''\n  while (entropy--) number += random()\n  return dictionary(number)\n}\n"],"sourceRoot":""}